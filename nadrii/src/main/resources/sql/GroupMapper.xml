<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="GroupMapper">
 	
	<resultMap id="groupSelectMap" type="group">
		<result property="join.joinNo"		column="join_no"			jdbcType="NUMERIC"/>
		<result property="join.groupNo"		column="group_no"		jdbcType="NUMERIC"/>
		<result property="join.userId"		column="user_id"			jdbcType="VARCHAR"/>
		<result property="join.groupRole"	column="group_role"		jdbcType="NUMERIC"/>
		<result property="title"					column="title" 				jdbcType="VARCHAR" />
		<result property="text"					column="text" 				jdbcType="CLOB" />
		<result property="regDate" 			column="reg_date" 		jdbcType="DATE" />
		<result property="viewCount"			column="view_count"		jdbcType="NUMERIC" />
		<result property="lat"					column="lat" 				jdbcType="VARCHAR" />
		<result property="lng"					column="lng" 				jdbcType="VARCHAR" />
		<result property="categoryCode" 	column="category_code" 	jdbcType="VARCHAR" />
		<result property="meetingDate" 		column="meeting_date" 	jdbcType="DATE" />		
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addGroup"		parameterType="group" >
	 	INSERT
		INTO groups ( group_no, title, text, view_count, lat, lng, category_code, meeting_date, reg_date ) 
		VALUES (	seq_groups_group_no.nextval, #{title}, #{text}, 0, #{lat:VARCHAR}, #{lng:VARCHAR},
					#{categoryCode}, #{meetingDate:VARCHAR}, SYSDATE )
	</insert>
	
	<select 	id="getGroupNo"	parameterType="group"	resultType="int">
		SELECT
		group_no
		FROM groups
		WHERE title=#{title} AND dbms_lob.compare(text, #{text})=0
	</select>	 
	 
	 <!-- SQL : SELECT ONE -->
	<select 	id="getGroup"	parameterType="int"	resultMap="groupSelectMap">
		SELECT
		j.user_id, g.group_no, g.title, g.text, g.view_count, g.lat, g.lng, g.category_code, g.meeting_date, g.reg_date
		FROM groups g, join j
		WHERE g.group_no = j.group_no
				AND j.group_role = 1
				AND g.group_no = #{value}
	</select>
	
	<update	id="updateViewCount"		parameterType="group" >
		UPDATE groups
	   	<set>
	   		view_count = #{viewCount}+1
	   	</set>
	   	WHERE group_no = #{join.groupNo}
	</update>
	 
	 <!-- SQL : UPDATE -->
	<update	id="updateGroup"		parameterType="group" >
		UPDATE groups
	   	<set>
	   		title 				= #{title}, 
	   		text 				= #{text},
	   		lat 					= #{lat:VARCHAR}, 
	   		lng 				= #{lng:VARCHAR},
	   		category_code 	= #{categoryCode}, 
	   		meeting_date 	= #{meetingDate:VARCHAR}
	   	</set>
	   	WHERE group_no = #{join.groupNo}
	</update>
	
	<delete id="deleteGroup"		parameterType="group">
	 	DELETE FROM groups
	 	<where>
	 		group_no = #{join.groupNo}
	 	</where>
	 </delete>
	 
	<!-- SQL : SELECT LIST -->
	<select  id="getGroupList"  parameterType="search"	resultMap="groupSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  				FROM		(	SELECT
									j.user_id, g.group_no, g.group_name, g.title, g.text, g.view_count, g.lat, g.lng, g.category_code, g.meeting_date, g.reg_date
									FROM groups g, join j
									WHERE g.group_no = j.group_no
											AND j.group_role = 1
									<if test="searchCondition != null">
										<if test="searchCondition == 0 and searchKeyword !='' ">
											AND (g.title LIKE '%${searchKeyword}%' OR g.text LIKE '%${searchKeyword}%')
										</if>
									</if>
									ORDER BY g.reg_date DESC ) inner_table
					WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM  (	SELECT
					j.user_id, g.group_no, g.group_name, g.title, g.text, g.view_count, g.lat, g.lng, g.category_code, g.meeting_date, g.reg_date
					FROM groups g, join j
					WHERE g.group_no = j.group_no
							AND j.group_role = 1
							<if test="searchCondition == 0 and searchKeyword !='' ">
								AND (g.title LIKE '%${searchKeyword}%' OR g.text LIKE '%${searchKeyword}%')
							</if>
					 ) countTable				
							
	 </select>
	 
</mapper>